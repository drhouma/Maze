/**
 * @file    maze_scene.h
 * @authors Savin A.     <telvina<at>student.21-school.ru
 * @authors Degtyarev A. <sreanna<at>student.21-school.ru>
 * @date    23/08/22
 */

#ifndef MAZE_SCENE_H
#define MAZE_SCENE_H

#include <QWidget>
#include <QPaintEvent>
#include <QPointF>
#include <QMouseEvent>
#include <QString>

#include <memory>

#include "../model/core/matrix.h"
#include "../model/core/core.h"
#include "../controller/controller.h"

/**
 * @class MazeScene
 * @brief Class draws mazes that generated by model
 */

class MazeScene final: public QWidget
{
    Q_OBJECT
    Q_DISABLE_COPY_MOVE(MazeScene)

public:
    explicit MazeScene(QWidget *parent = nullptr);
    ~MazeScene() final = default;

public:
    auto SetController(const std::shared_ptr<s21::Controller>& controller) -> void;

private:
    auto paintEvent(QPaintEvent* event) -> void override;
    auto mousePressEvent(QMouseEvent* event) -> void override;

private:
    std::shared_ptr<s21::Controller>  m_controller {};
    s21::Matrix<bool> m_verticalWalls {};
    s21::Matrix<bool> m_horizontalWalls {};
    s21::Mode         m_mode {};
    int               m_rows {};
    int               m_cols {};
    int               m_clickCounter {};
    QPoint            m_beginPosition {};
    QPoint            m_endPosition   {};
    bool              isNeedSolution {};

private:
    static constexpr int lineWidth {2};
    static constexpr double windowSize  {500};
    const QString purpleColor {"#CC0099"};
};

#endif // MAZE_SCENE_H
